What happens when you initialize a repository? Why do you need to do it?
	A new folder named ".git" is created in the current working directory.
	This stores all of the information needed to begin a repository and
	start making commits for whatever files I want.
	
How is the staging area different from the working directory and the 
repository? What value do you think it offers?
	The staging area holds files that will be added to the repository,
	but have not yet been added.  It also helps distinguish those files 
	from other files in the working directory that are not going to be 
	committed at this time.
	
How can you use the staging area to make sure you have one commit per logical change?
	Use git diff --staged to compare what's in the staging area with the most
	recent commit to make sure the only changes present are the ones intended.
	
What are some situations when branches would be helpful in keeping your 
history organized? How would branches help?
	Trying out significantly new features, or attempting to create 
	entirely new versions of the code are great times to use branches.
	They help keep those different code modifications clearly seperate 
	from the main (master) body of the code.

How do the diagrams help you visualize the branch structure?
	They show which commits are parents and children of which others,
	as well as showing which branches may be unreachable from other 
	locations.  It also clearly shows which commits and changes are 
	present in each different branch.
	
What is the result of merging two branches together? Why do we represent 
it in the diagram the way we do?
	The two branches combine to form a single commit containing code from 
	both branches, adding or removing code as necessary by comparing the two 
	tips of the branches being merged with the code that existed before the 
	branch was created.  Now, both branches serve as parents for the new commit.
	
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	The advantage is it can save a lot of time and effort in cases where making 
	the merge is easy.  The disadvantage is that it cannot reason out more 
	complicated scenarios, and must leave that to the user to do manually, 
	otherwise its attempt at an automatic merge could result in problems.