When would you want to use a remote repository rather than keeping all your work local?
  This would be helpful when coordinating with multiple people from different locations,
  or when working from different locations on the same files.  Having it stored remotely
  makes for easier access to the files.

Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?
	Perhaps there could be updates ont he remote that I don't want to have
	locally just yet, or at all?  I really have no good answer to this question.
	
Describe the differences between forks, clones, and branches. When would 
you use one instead of another?
	I can use fork to make my own copy of someone else's repository from Github, 
	even when I don't have access to edit their repository.  It is essentially
	the same process as cloning, but Github does it for me on their servers.
	Cloning allows me to copy my own repository either locally, or from the Github
	servers.  Branching is when I create a new commit to an existing branch of 
	a repository, discrete from the branch which its parent is a member of.  This
	can be done locally or on the Github servers.
	
What is the benefit of having a copy of the last known state of the remote stored locally?
	It makes it easy to keep track of my local status compared with the Github repository 
	status.  Differences are much easier to identify, and the appropriate steps can be
	taken to get the local and remote versions completely up to date.
	
How would you collaborate without using Git or GitHub? What would be easier, 
and what would be harder?
	We could email files back and forth, or use another service like dropbox.  It
	would be more difficult to keep files synced up, and more difficult to spot 
	the differences in the first place doing it that way.  Although it might be 
	easier to get the same file on all collaborating machines, it would be much 
	more likely not to contain all of the changes made by all collaborators.